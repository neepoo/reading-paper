// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: append_entries.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogEntryMetaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term  uint64 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Index uint64 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *LogEntryMetaInfo) Reset() {
	*x = LogEntryMetaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_append_entries_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogEntryMetaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntryMetaInfo) ProtoMessage() {}

func (x *LogEntryMetaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_append_entries_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntryMetaInfo.ProtoReflect.Descriptor instead.
func (*LogEntryMetaInfo) Descriptor() ([]byte, []int) {
	return file_append_entries_proto_rawDescGZIP(), []int{0}
}

func (x *LogEntryMetaInfo) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *LogEntryMetaInfo) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type LogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta    *LogEntryMetaInfo `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Command []byte            `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_append_entries_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_append_entries_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_append_entries_proto_rawDescGZIP(), []int{1}
}

func (x *LogEntry) GetMeta() *LogEntryMetaInfo {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *LogEntry) GetCommand() []byte {
	if x != nil {
		return x.Command
	}
	return nil
}

type AppendEntryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// leader用于保证自己的合法地位
	Heartbeat bool `protobuf:"varint,1,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
	// term 通信双方都需要交换该信息
	Term uint64 `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	// max_index leader提交的entry中的最大index
	MaxIndex uint64 `protobuf:"varint,3,opt,name=max_index,json=maxIndex,proto3" json:"max_index,omitempty"`
	// leader 最近提交的entry的term和index
	// 如果follower没有发现在他的logs中发现相同term和index的entry则会拒绝该logEntry
	// 为了保证Log Matching属性
	PrecededLogEntry *LogEntryMetaInfo `protobuf:"bytes,4,opt,name=preceded_log_entry,json=precededLogEntry,proto3" json:"preceded_log_entry,omitempty"`
	// 当前要复制的logEntry,不确定是否需要batch,这可能是一个负优化？
	// 当前就是每有一个client request就创建一个logEntry
	Log *LogEntry `protobuf:"bytes,5,opt,name=log,proto3" json:"log,omitempty"`
	// 用于如果follower和leader的log不一致时,
	// follower确定从哪开始duplicate log
	NextIndex uint64 `protobuf:"varint,6,opt,name=next_index,json=nextIndex,proto3" json:"next_index,omitempty"`
}

func (x *AppendEntryReq) Reset() {
	*x = AppendEntryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_append_entries_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendEntryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntryReq) ProtoMessage() {}

func (x *AppendEntryReq) ProtoReflect() protoreflect.Message {
	mi := &file_append_entries_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntryReq.ProtoReflect.Descriptor instead.
func (*AppendEntryReq) Descriptor() ([]byte, []int) {
	return file_append_entries_proto_rawDescGZIP(), []int{2}
}

func (x *AppendEntryReq) GetHeartbeat() bool {
	if x != nil {
		return x.Heartbeat
	}
	return false
}

func (x *AppendEntryReq) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntryReq) GetMaxIndex() uint64 {
	if x != nil {
		return x.MaxIndex
	}
	return 0
}

func (x *AppendEntryReq) GetPrecededLogEntry() *LogEntryMetaInfo {
	if x != nil {
		return x.PrecededLogEntry
	}
	return nil
}

func (x *AppendEntryReq) GetLog() *LogEntry {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *AppendEntryReq) GetNextIndex() uint64 {
	if x != nil {
		return x.NextIndex
	}
	return 0
}

var File_append_entries_proto protoreflect.FileDescriptor

var file_append_entries_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x3c, 0x0a, 0x10, 0x4c, 0x6f,
	0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x65,
	0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x4e, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x0e, 0x41, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x68,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x42, 0x0a, 0x12, 0x70, 0x72,
	0x65, 0x63, 0x65, 0x64, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x70, 0x72,
	0x65, 0x63, 0x65, 0x64, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e,
	0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x66, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x62, 0x42, 0x12, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x20, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x2f, 0x62, 0x75, 0x66, 0x2d, 0x74, 0x6f, 0x75, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0xa2,
	0x02, 0x03, 0x50, 0x58, 0x58, 0xaa, 0x02, 0x02, 0x50, 0x62, 0xca, 0x02, 0x02, 0x50, 0x62, 0xe2,
	0x02, 0x0e, 0x50, 0x62, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x02, 0x50, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_append_entries_proto_rawDescOnce sync.Once
	file_append_entries_proto_rawDescData = file_append_entries_proto_rawDesc
)

func file_append_entries_proto_rawDescGZIP() []byte {
	file_append_entries_proto_rawDescOnce.Do(func() {
		file_append_entries_proto_rawDescData = protoimpl.X.CompressGZIP(file_append_entries_proto_rawDescData)
	})
	return file_append_entries_proto_rawDescData
}

var file_append_entries_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_append_entries_proto_goTypes = []interface{}{
	(*LogEntryMetaInfo)(nil), // 0: pb.LogEntryMetaInfo
	(*LogEntry)(nil),         // 1: pb.LogEntry
	(*AppendEntryReq)(nil),   // 2: pb.AppendEntryReq
}
var file_append_entries_proto_depIdxs = []int32{
	0, // 0: pb.LogEntry.meta:type_name -> pb.LogEntryMetaInfo
	0, // 1: pb.AppendEntryReq.preceded_log_entry:type_name -> pb.LogEntryMetaInfo
	1, // 2: pb.AppendEntryReq.log:type_name -> pb.LogEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_append_entries_proto_init() }
func file_append_entries_proto_init() {
	if File_append_entries_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_append_entries_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogEntryMetaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_append_entries_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_append_entries_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendEntryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_append_entries_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_append_entries_proto_goTypes,
		DependencyIndexes: file_append_entries_proto_depIdxs,
		MessageInfos:      file_append_entries_proto_msgTypes,
	}.Build()
	File_append_entries_proto = out.File
	file_append_entries_proto_rawDesc = nil
	file_append_entries_proto_goTypes = nil
	file_append_entries_proto_depIdxs = nil
}
